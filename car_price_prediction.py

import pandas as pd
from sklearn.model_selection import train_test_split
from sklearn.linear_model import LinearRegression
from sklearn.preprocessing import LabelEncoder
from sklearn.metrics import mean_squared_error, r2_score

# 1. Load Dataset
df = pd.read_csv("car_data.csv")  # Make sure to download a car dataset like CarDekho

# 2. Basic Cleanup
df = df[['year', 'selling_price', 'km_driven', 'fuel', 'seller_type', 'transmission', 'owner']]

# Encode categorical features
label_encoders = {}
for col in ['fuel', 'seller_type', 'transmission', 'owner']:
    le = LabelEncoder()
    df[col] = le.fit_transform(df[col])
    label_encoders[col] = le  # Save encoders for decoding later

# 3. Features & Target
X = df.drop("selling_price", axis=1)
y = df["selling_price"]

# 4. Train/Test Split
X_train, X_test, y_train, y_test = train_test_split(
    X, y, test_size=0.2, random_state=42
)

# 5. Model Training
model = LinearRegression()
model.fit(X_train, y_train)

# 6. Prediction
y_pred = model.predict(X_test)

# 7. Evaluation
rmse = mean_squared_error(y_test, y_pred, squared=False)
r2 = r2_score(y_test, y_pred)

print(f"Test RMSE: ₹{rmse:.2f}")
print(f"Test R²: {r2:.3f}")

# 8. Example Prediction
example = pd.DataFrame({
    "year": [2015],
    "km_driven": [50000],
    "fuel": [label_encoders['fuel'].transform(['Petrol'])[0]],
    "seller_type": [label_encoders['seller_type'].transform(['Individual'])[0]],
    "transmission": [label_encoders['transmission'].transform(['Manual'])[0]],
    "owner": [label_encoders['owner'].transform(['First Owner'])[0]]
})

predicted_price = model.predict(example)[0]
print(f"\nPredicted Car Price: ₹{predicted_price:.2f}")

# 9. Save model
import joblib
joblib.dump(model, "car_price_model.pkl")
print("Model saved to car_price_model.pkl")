# car_price_prediction.py

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error, r2_score

# 1. Load Dataset
df = pd.read_csv("car_data.csv")  # Make sure to download a car dataset like CarDekho

# 2. Basic Cleanup
df = df[['year', 'selling_price', 'km_driven', 'fuel', 'seller_type', 'transmission', 'owner']]

# Encode categorical features
label_encoders = {}
for col in ['fuel', 'seller_type', 'transmission', 'owner']:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le  # Save encoders for decoding later

# 3. Features & Target
X = df.drop("selling_price", axis=1)
y = df["selling_price"]

# 4. Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# 5. Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# 6. Prediction
y_pred = model.predict(X_test)

# 7. Evaluation
rmse = mean_squared_error(y_test, y_pred, squared=False)
r2 = r2_score(y_test, y_pred)

print(f"Test RMSE: ₹{rmse:.2f}")
print(f"Test R²: {r2:.3f}")

# 8. Example Prediction
example = pd.DataFrame({
    "year": [2015],
    "km_driven": [50000],
    "fuel": [label_encoders['fuel'].transform(['Petrol'])[0]],
    "seller_type": [label_encoders['seller_type'].transform(['Individual'])[0]],
    "transmission": [label_encoders['transmission'].transform(['Manual'])[0]],
    "owner": [label_encoders['owner'].transform(['First Owner'])[0]]
})

predicted_price = model.predict(example)[0]
print(f"\nPredicted Car Price: ₹{predicted_price:.2f}")

# 9. Save model
import joblib
joblib.dump(model, "car_price_model.pkl")
print("Model saved to car_price_model.pkl")